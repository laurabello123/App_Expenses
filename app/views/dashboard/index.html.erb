
<!DOCTYPE html>
<html>
  <head>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <meta charset="utf-8">
    <title>Expenses</title>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
         <div class="container">
           <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo03" aria-controls="navbarTogglerDemo03" aria-expanded="false" aria-label="Toggle navigation">
             <span class="navbar-toggler-icon"></span>
           </button>
           <a class="navbar-brand" href="#">Expensify</a>

           <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
             <ul class="navbar-nav ml-auto mt-2 mt-lg-0">
               <li class="nav-item">
                 <a class="nav-link" href="expenses">Expenses</a>
               </li>
               <li class="nav-item active">
                 <a class="nav-link" href="dashboard">Dashboard <span class="sr-only">(current)</span></a>
               </li>
             </ul>
           </div>
         </div>
       </nav>

         <div class = "container my-4">
           <div class = "row">
           <h5 class="col">$1.345.679</h5>
           <h5 class="col">$1.456.789</h5>
           <h5 class="col">$3.678.567</h5>
           <h5 class="col"> 15.678.456</h5>
         </div>
         <div class = "container">
           <div class = "row">
           <p class="col">Today</p>
           <p class="col">Yesterday</p>
           <p class="col">This Month</p>
           <p class="col">Last Month</p>
         </div>

    <div class = "container">
      <div class = "row">
        <h5 class="col"> Last 6 months <div id="chartContainer1" style="height: 300px; width: 100%;"></div></h5>
        <h5 class="col"> By day <div id="chartContainer2" style="height: 300px; width: 100%;"></div> </h5>
    </div>
    <div class = "container ">
      <div class = "row">
        <h5 class="col"> By category <div id="chartContainer3" style="height: 300px; width: 100%;"></div></h5>
        <h5 class="col"> Accumulated <div id="chartContainer4" style="height: 300px; width: 100%;"></div> </h5>
      </div>
    <script>
 // Inicio Last 6 months //
   var chart = new CanvasJS.Chart("chartContainer1", {
     animationEnabled: true,
     theme: "light2",
     title:{
       text: ""
     },
     axisX: {
       interval: 1,
       intervalType: "year",
       valueFormatString: "YYYY"
     },
     axisY: {
       suffix: "%"
     },
     toolTip: {
       shared: true
     },
     legend: {
       reversed: false,
       verticalAlign: "bottom",
       horizontalAlign: "center"
     },
     data: [{
       type: "stackedColumn100",
       name: "Purchases",
       showInLegend: true,
       xValueFormatString: "MMMDD",
       yValueFormatString: "#,##0\"%\"",
       dataPoints: [
         { x: new Date(2010,0), y: 40 },
         { x: new Date(2011,0), y: 50 },
         { x: new Date(2012,0), y: 60 },
         { x: new Date(2013,0), y: 61 },
         { x: new Date(2014,0), y: 63 },
         { x: new Date(2015,0), y: 65 }
       ]
     },
     {
       type: "stackedColumn100",
       name: "Withdrawals",
       showInLegend: true,
       xValueFormatString: "YYYY",
       yValueFormatString: "#,##0\"%\"",
       dataPoints: [
         { x: new Date(2010,0), y: 28 },
         { x: new Date(2011,0), y: 18 },
         { x: new Date(2012,0), y: 12 },
         { x: new Date(2013,0), y: 10 },
         { x: new Date(2014,0), y: 10 },
         { x: new Date(2015,0), y: 7 }
       ]
     },
     {
       type: "stackedColumn100",
       name: "Transfers",
       showInLegend: true,
       xValueFormatString: "YYYY",
       yValueFormatString: "#,##0\"%\"",
       dataPoints: [
         { x: new Date(2010,0), y: 15 },
         { x: new Date(2011,0), y: 12 },
         { x: new Date(2012,0), y: 10 },
         { x: new Date(2013,0), y: 9 },
         { x: new Date(2014,0), y: 7 },
         { x: new Date(2015,0), y: 5 }
       ]
     },
     {
       type: "stackedColumn100",
       name: "Payments",
       showInLegend: true,
       xValueFormatString: "YYYY",
       yValueFormatString: "#,##0\"%\"",
       dataPoints: [
         { x: new Date(2010,0), y: 17 },
         { x: new Date(2011,0), y: 20 },
         { x: new Date(2012,0), y: 18 },
         { x: new Date(2013,0), y: 20 },
         { x: new Date(2014,0), y: 20 },
         { x: new Date(2015,0), y: 23 }
       ]
     }]
   });
   chart.render();
   // Inicio By day //
  var chart = new CanvasJS.Chart("chartContainer2", {
    animationEnabled: true,
    theme: "light2",
    title:{
    text: ""
    },
    data: [
    {
      type: "column",
      showInLegend: true,
      name: "series1",
      legendText: "Purchases",
      dataPoints: [
      { x: 10, y: 71 },
      { x: 20, y: 55},
      { x: 30, y: 50 },
      { x: 40, y: 65 },
      { x: 50, y: 95 },
      { x: 60, y: 68 },
      { x: 70, y: 28 },
      { x: 80, y: 34 },
      { x: 90, y: 14}

      ]
    },
      {
      type: "column",
      legendText: "Withdrawals",
     name: "series2",
      showInLegend: true,
      dataPoints: [
      { x: 10, y: 7 },
      { x: 20, y: 5},
      { x: 30, y: 5 },
      { x: 40, y: 16 },
      { x: 50, y: 9 },
      { x: 60, y: 61 },
      { x: 70, y: 18 },
      { x: 80, y: 14 },
      { x: 90, y: 24}

      ]
    },
      {
      type: "column",
      legendText: "Transfers",
     name: "series2",
      showInLegend: true,
      dataPoints: [
      { x: 10, y: 7 },
      { x: 20, y: 5},
      { x: 30, y: 5 },
      { x: 40, y: 16 },
      { x: 50, y: 9 },
      { x: 60, y: 61 },
      { x: 70, y: 18 },
      { x: 80, y: 14 },
      { x: 90, y: 24}

      ]
    },
      {
      type: "column",
      legendText: "Payments",
     name: "series2",
      showInLegend: true,
      dataPoints: [
      { x: 10, y: 7 },
      { x: 20, y: 5},
      { x: 30, y: 5 },
      { x: 40, y: 16 },
      { x: 50, y: 9 },
      { x: 60, y: 61 },
      { x: 70, y: 18 },
      { x: 80, y: 14 },
      { x: 90, y: 24}

      ]
    }
    ]
  });
  chart.render();
// Fin By day //
// Inicio By category //
  var chart = new CanvasJS.Chart("chartContainer3", {
    animationEnabled: true,
    theme: "light2",
    title:{
      text: "",
      horizontalAlign: "left"
    },
    data: [{
      type: "doughnut",
      startAngle: 60,
      //innerRadius: 60,
      indexLabelFontSize: 17,
      indexLabel: "{label} - #percent%",
      toolTipContent: "<b>{label}:</b> {y} (#percent%)",
      dataPoints: [
        { y: 67, label: "Restaurant" },
        { y: 28, label: "Grocery" },
        { y: 10, label: "Car" },
        { y: 7, label: "Services"},
        { y: 15, label: "Home"},
        { y: 6, label: "Education"},
        { y: 6, label: "Fun"},
        { y: 6, label: "Travel"}
      ]
    }]
  });
  chart.render();
// Fin By category //
// Inicio Accumulated //
  var chart = new CanvasJS.Chart("chartContainer4", {
    animationEnabled: true,
    theme: "light2",
    title:{
      text: ""
    },
    axisY :{
      valueFormatString: "#0,.",
      suffix: "k"
    },
    axisX: {
      title: ""
    },
    toolTip: {
      shared: true
    },
    data: [{
      type: "stackedArea",
      showInLegend: true,
      toolTipContent: "<span style=\"color:#4F81BC\"><strong>{name}: </strong></span> {y}",
      name: "Current month",
      dataPoints: [
      { x: 1, y: 3000 },
      { x: 2, y: 7000 },
      { x: 3, y: 10000 },
      { x: 4, y: 14000 },
      { x: 5, y: 23000 },
      { x: 6, y: 31000 },
      { x: 7, y: 42000 },
      { x: 8, y: 56000 },
      { x: 9, y: 64000 },
      { x: 10, y: 81000 },
      { x: 11, y: 105000 }
      ]
    },
    {
      type: "stackedArea",
      name: "Last month",
      toolTipContent: "<span style=\"color:#C0504E\"><strong>{name}: </strong></span> {y}<br><b>Total:<b> #total",
      showInLegend: true,
      dataPoints: [
      { x: 4, y: 4000 },
      { x: 5, y: 6000 },
      { x: 6, y: 9000 },
      { x: 7,y: 14000 },
      { x: 8,y: 21000 },
      { x: 9, y: 31000 },
      { x: 10, y: 46000 },
      { x: 11, y: 61000 }
      ]
    }]
  });
  chart.render();
// Fin Accumulated //
</script>
   </header>
  </body>
</html>
